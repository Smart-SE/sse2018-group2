
■処理フロー
[JudgeTemperature]
1.test.csv読み込み
2.最新日時が先頭になるようソート
3.最新日時の温度を閾値判定

[StoreTempData]
1.テーブルの有無を確認して、なければ生成する
2.状態判定を行ったデータをDBに保存する

[ReadTempData]
1.テーブル内のデータを表示する

[DelTempData]
1.テーブルを削除する

■DB
SQLite3
データベース:/home/pi/temp.db
テーブル:t_temp
データ構造:レコードID, 日時, デバイスID, 温度, 状態(0:適温, 1:ぬるい)

■温度閾値
暫定で20度を閾値としている

■残処理
x分間隔での定期温度判定(cron or main内ループ)
各処理のブラッシュアップ

■検討項目
・対応するジョッキを増やす場合、
　温度を記載したCSVファイルはジョッキごとに分けた方が扱いやすい？
